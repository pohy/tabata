import{a as u,p as x,y as S}from"./chunk-OIYGIGL5-BuvsNknK.js";import{a as E}from"./index-DP-Xm7qk.js";import{h as P}from"./button-BXLQ9laS.js";function M(e,t){const o=u.createContext(t),i=c=>{const{children:s,...n}=c,a=u.useMemo(()=>n,Object.values(n));return x.jsx(o.Provider,{value:a,children:s})};i.displayName=e+"Provider";function r(c){const s=u.useContext(o);if(s)return s;if(t!==void 0)return t;throw new Error(`\`${c}\` must be used within \`${e}\``)}return[i,r]}function N(e,t=[]){let o=[];function i(c,s){const n=u.createContext(s),a=o.length;o=[...o,s];const d=l=>{const{scope:p,children:v,...m}=l,h=p?.[e]?.[a]||n,C=u.useMemo(()=>m,Object.values(m));return x.jsx(h.Provider,{value:C,children:v})};d.displayName=c+"Provider";function f(l,p){const v=p?.[e]?.[a]||n,m=u.useContext(v);if(m)return m;if(s!==void 0)return s;throw new Error(`\`${l}\` must be used within \`${c}\``)}return[d,f]}const r=()=>{const c=o.map(s=>u.createContext(s));return function(n){const a=n?.[e]||c;return u.useMemo(()=>({[`__scope${e}`]:{...n,[e]:a}}),[n,a])}};return r.scopeName=e,[i,w(r,...t)]}function w(...e){const t=e[0];if(e.length===1)return t;const o=()=>{const i=e.map(r=>({useScope:r(),scopeName:r.scopeName}));return function(c){const s=i.reduce((n,{useScope:a,scopeName:d})=>{const l=a(c)[`__scope${d}`];return{...n,...l}},{});return u.useMemo(()=>({[`__scope${t.scopeName}`]:s}),[s])}};return o.scopeName=t.scopeName,o}function O(e,t,{checkForDefaultPrevented:o=!0}={}){return function(r){if(e?.(r),o===!1||!r.defaultPrevented)return t?.(r)}}var b=globalThis?.document?u.useLayoutEffect:()=>{},$=S[" useInsertionEffect ".trim().toString()]||b;function k({prop:e,defaultProp:t,onChange:o=()=>{},caller:i}){const[r,c,s]=y({defaultProp:t,onChange:o}),n=e!==void 0,a=n?e:r;{const f=u.useRef(e!==void 0);u.useEffect(()=>{const l=f.current;l!==n&&console.warn(`${i} is changing from ${l?"controlled":"uncontrolled"} to ${n?"controlled":"uncontrolled"}. Components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled value for the lifetime of the component.`),f.current=n},[n,i])}const d=u.useCallback(f=>{if(n){const l=R(f)?f(e):f;l!==e&&s.current?.(l)}else c(f)},[n,e,c,s]);return[a,d]}function y({defaultProp:e,onChange:t}){const[o,i]=u.useState(e),r=u.useRef(o),c=u.useRef(t);return $(()=>{c.current=t},[t]),u.useEffect(()=>{r.current!==o&&(c.current?.(o),r.current=o)},[o,r]),[o,i,c]}function R(e){return typeof e=="function"}var g=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","select","span","svg","ul"],H=g.reduce((e,t)=>{const o=P(`Primitive.${t}`),i=u.forwardRef((r,c)=>{const{asChild:s,...n}=r,a=s?o:t;return typeof window<"u"&&(window[Symbol.for("radix-ui")]=!0),x.jsx(a,{...n,ref:c})});return i.displayName=`Primitive.${t}`,{...e,[t]:i}},{});function I(e,t){e&&E.flushSync(()=>e.dispatchEvent(t))}export{H as P,N as a,M as b,O as c,I as d,k as e,b as u};
